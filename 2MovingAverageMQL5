#include <Trade/Trade.mqh>

CTrade trade;
ulong posTicket;

int OnInit() {
    
   return(INIT_SUCCEEDED);
  }


void OnDeinit(const int reason) { 
    
   
  }

void OnTick() {

     static datetime timestamp;
     datetime time = iTime(_Symbol,PERIOD_CURRENT,0);
     if(timestamp != time){
        timestamp = time;
     
     static int handleSlowMa = iMA(_Symbol,PERIOD_CURRENT,256,0,MODE_EMA,PRICE_CLOSE);
     double slowMaArray[];
     CopyBuffer(handleSlowMa,0,1,2,slowMaArray);
     ArraySetAsSeries(slowMaArray,true);
     
     static int handleFastMa = iMA(_Symbol,PERIOD_CURRENT,50,0,MODE_EMA,PRICE_CLOSE);
     double fastMaArray[];
     CopyBuffer(handleFastMa,0,1,2,fastMaArray);
     ArraySetAsSeries(fastMaArray,true);
     
     if(fastMaArray[0] > slowMaArray[0] && fastMaArray[1] < slowMaArray[1]) {
     
             if(posTicket > 0 && PositionSelectByTicket(posTicket)){
        int posType = (int)PositionGetInteger(POSITION_TYPE);
           if(posType == POSITION_TYPE_SELL){
           trade.PositionClose(posTicket);
           posType = 0;
           }
        
       }
        Print("Fast MA is now > than slow Ma");
        double ask = SymbolInfoDouble(_Symbol,SYMBOL_ASK);
        double sl = ask - 200 * SymbolInfoDouble(_Symbol,SYMBOL_POINT);
      
        trade.Buy(0.1,_Symbol,ask,sl,0,"This is a buy");
        posTicket = trade.ResultOrder();
       
       
     }
    if(fastMaArray[0] < slowMaArray[0] && fastMaArray[1] > slowMaArray[1]) {
    
        if(posTicket > 0 && PositionSelectByTicket(posTicket)){
        int posType = (int)PositionGetInteger(POSITION_TYPE);
           if(posType == POSITION_TYPE_BUY){
           trade.PositionClose(posTicket);
           posType = 0;
           }
        
       }
        Print("Fast MA is now < than slow Ma");
        double bid = SymbolInfoDouble(_Symbol,SYMBOL_BID);
        double sl = bid + 200 * SymbolInfoDouble(_Symbol,SYMBOL_POINT);

        trade.Sell(0.1,_Symbol,bid,sl,0,"This is a sell");
        posTicket = trade.ResultOrder();
       
       
     }    
     
     
     Comment("nslowMaArray[0]:",slowMaArray[0],
             "nslowMaArray[1]:",slowMaArray[1],
             "nfastMaArray[0]:",fastMaArray[0],
             "nfastMaArray[1]:",fastMaArray[1]);
             
     }        
  }

